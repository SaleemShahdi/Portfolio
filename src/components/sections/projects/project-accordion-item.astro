---
import { ChevronDown, Github, ExternalLink } from "lucide-react";
import type { CollectionEntry } from "astro:content";
import Badge from "@/components/ui/badge.astro";
import MarkdownRenderer from "@/components/ui/markdown-renderer.astro";

interface Props {
  project: CollectionEntry<"projects">;
}

const { project } = Astro.props;
---

<details class="project-item group w-full p-4 not-last:border-b">
  <summary class="flex cursor-pointer list-none items-center justify-between text-left">
    <h3 class="text-lg font-semibold underline-offset-6 group-hover:underline">
      {project.data.name}
    </h3>
    <div class="flex items-center">
      <span class="show-more-text text-xs font-medium text-primary mr-2">Show more</span>
      <span class="show-less-text hidden text-xs font-medium text-primary mr-2">Show less</span>
      <ChevronDown class="chevron-down size-4 transition-transform duration-300 group-open:rotate-180" />
    </div>
  </summary>

  <div class="prose min-w-full pt-4">
    <MarkdownRenderer content={project.body} />
  </div>

  <div class="mt-4 flex flex-wrap gap-1.5">
    {project.data.technologies.map(technology => (
      <Badge>{technology}</Badge>
    ))}
  </div>

  <div class="mt-4 flex gap-2">
    {project.data.sourceCode && (
      <a href={project.data.sourceCode} target="_blank" class="flex items-center gap-1 text-sm font-medium text-primary hover:underline">
        <Github class="size-4" />
        Source Code
      </a>
    )}
    {project.data.preview && (
      <a href={project.data.preview} target="_blank" class="flex items-center gap-1 text-sm font-medium text-primary hover:underline">
        <ExternalLink class="size-4" />
        Live Demo
      </a>
    )}
  </div>
</details>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll('details.project-item').forEach((detail) => {
      const summary = detail.querySelector('summary');
      const showMoreText = detail.querySelector('.show-more-text');
      const showLessText = detail.querySelector('.show-less-text');

      if (summary && showMoreText && showLessText) {
        // We prevent the default summary click to handle text change
        summary.addEventListener('click', (event) => {
          // Check the state *before* the browser toggles it
          const isOpening = !detail.hasAttribute('open');
          
          showMoreText.classList.toggle('hidden', isOpening);
          showLessText.classList.toggle('hidden', !isOpening);
        });
      }
    });
  });
</script>